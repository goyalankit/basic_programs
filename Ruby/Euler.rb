#
#Q1. f we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
#Find the sum of all the multiples of 3 or 5 below 1000.
#

(1...1000).collect{ |i|  (i%3==0 || i%5==0) ? i : 0 }.inject(:+)


#Q2. Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


def fib(n)
    return 1 if(n==0)
    return 2 if(n==1)
    return (fib(n-1) + fib(n-2))
end

count=0
limit = 4000000
sum = 0
while(true)
    fs = fib(count)
    break if fs > limit
    sum+=fs if fs%2==0
    count += 1
end



#The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?

require 'rubygems'
require 'prime'

fctr = 0
Prime.each(Math.sqrt(600851475143).to_i) do |prime|
    fctr = prime if 600851475143%prime==0
end


def is_prime n
    (2..Math.sqrt(n).to_i).each do |i|
        return false if n%i==0 || n%2==0
    end
    return true
end

def largest_prime_factor n
    factor = 0
    (1..Math.sqrt(n).to_i).step(2) do |j|
       p (n%j==0 && is_prime(j)) if j==6857
        factor = j if (n%j==0 && is_prime(j))
    end
    p factor
end
